# Generated by Django 5.0.6 on 2024-05-23 07:28

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='admin',
            name='email',
            field=models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[\\w\\.-]+@[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}$', message='Tienes que poner un email valido.')]),
        ),
        migrations.AlterField(
            model_name='admin',
            name='password',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\S+$', message='La contraseña no puede estar vacía.'), django.core.validators.RegexValidator('^\\S*$', message='La contraseña no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='dni',
            field=models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{8}[a-zA-Z]$', message='El DNI debe tener el formato 12345678X.'), django.core.validators.RegexValidator('^\\S+$', message='El DNI no puede estar vacío.'), django.core.validators.RegexValidator('^\\S*$', message='El DNI no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='email',
            field=models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[\\w\\.-]+@[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}$', message='Tienes que poner un email válido.'), django.core.validators.RegexValidator('^\\S+$', message='El email no puede estar vacío.'), django.core.validators.RegexValidator('^\\S*$', message='El email no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='firstSurname',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^\\S+$', message='El primer apellido no puede estar vacío.'), django.core.validators.RegexValidator('^\\S*$', message='El primer apellido no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\S+$', message='El nombre no puede estar vacío.'), django.core.validators.RegexValidator('^\\S*$', message='El nombre no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='password',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^\\S+$', message='La contraseña no puede estar vacía.'), django.core.validators.RegexValidator('^\\S*$', message='La contraseña no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='phoneNumber',
            field=models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\d{9,15}$', message='El número de teléfono debe tener entre 9 y 15 dígitos.'), django.core.validators.RegexValidator('^\\S+$', message='El número de teléfono no puede estar vacío.'), django.core.validators.RegexValidator('^\\S*$', message='El número de teléfono no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='secondSurname',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^\\S+$', message='El segundo apellido no puede estar vacío.'), django.core.validators.RegexValidator('^\\S*$', message='El segundo apellido no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='report',
            name='disease',
            field=models.CharField(default=None, max_length=255, validators=[django.core.validators.RegexValidator('^\\S+$', message='El nombre de la enfermedad no puede estar vacío.'), django.core.validators.RegexValidator('^\\S*$', message='El nombre de la enfermedad no puede contener espacios.')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[\\w\\.-]+@[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}$', message='Tienes que poner un email valido.')]),
        ),
    ]
